generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
  previewFeatures = []
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  age      Int?

  role Role @default(CLIENT)

  active          Boolean @default(false)
  activationToken String?

  resetToken       String? // token tempor√°rio
  resetTokenExpiry DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  sale        Boolean  @default(false)
  salePrice   Float?
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  image       String?

  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])

  orderItems OrderItem[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  total     Float    @default(0)
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  items OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderId   String  @db.ObjectId
  productId String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  CLIENT
  ADMIN
}
